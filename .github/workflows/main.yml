# This is a basic workflow to help you get started with Actions

name: Build and Upload Lambda Runtime Package

on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_deploy_artifact:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: DotNet Setup
        uses: actions/setup-dotnet@v1.8.2

      - name: Publish Email Service Lambda Source Code 
        run: |
          dotnet publish "./source/EmailFailOverLambda/EmailFailOverLambda" -o ./publish
          zip -r EmailServiceLambda.zip ./publish

      - name: Upload Lambda Artifact to GitHub Repository      
        uses: actions/upload-artifact@v2
        with:
          name: EmailServiceLambda-1.0.0.zip
          path: ./EmailServiceLambda.zip
      
  deploy_email_service_lambda:
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Email Service Lambda Artifact
        with:
          name: EmailServiceLambda-1.0.0.zip
          path: ./infrastructure/deploy/lambda
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Configure Terraform CLI
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.6
          
      - name: Deploy Terraform Infrastructure
        run: |
          cd ./infrastructure/deploy
          sh deploy.sh lambda
    
